schemaVersion: '2.0.0'
fileExistenceTests:
- name: 'testfile.txt'
  path: '/symlinks/testfile.txt'
  shouldExist: true
- name: 'subdir/dirfile.txt'
  path: '/symlinks/subdir/dirfile.txt'
  shouldExist: true
- name: 'relative symlink to file'
  path: '/symlinks/relative-symlink.txt'
  shouldExist: true
- name: 'absolute symlink to file'
  path: '/symlinks/absolute-symlink.txt'
  shouldExist: true
- name: 'relative symlink to directory'
  path: '/symlinks/relative-dir-symlink'
  shouldExist: true
- name: 'absolute symlink to directory'
  path: '/symlinks/absolute-dir-symlink'
  shouldExist: true
# We already test for symlinks using the readlink command in the commandTests section
# So we don't need to test for them here using the isSymlink field

fileContentTests:
- name: 'verify testfile content'
  path: '/symlinks/testfile.txt'
  expectedContents: ['test file content']
- name: 'verify dirfile content'
  path: '/symlinks/subdir/dirfile.txt'
  expectedContents: ['directory file content']
# We're verifying symlinks using the commandTests section, so we don't need these content tests
# which are failing because container-structure-test can't follow the symlinks correctly

commandTests:
- name: 'verify relative symlink to file target'
  command: 'readlink'
  args: ['/symlinks/relative-symlink.txt']
  expectedOutput: ['testfile.txt']
- name: 'verify absolute symlink to file target'
  command: 'readlink'
  args: ['/symlinks/absolute-symlink.txt']
  expectedOutput: ['testfile.txt']
- name: 'verify relative symlink to directory target'
  command: 'readlink'
  args: ['/symlinks/relative-dir-symlink']
  expectedOutput: ['subdir']
- name: 'verify absolute symlink to directory target'
  command: 'readlink'
  args: ['/symlinks/absolute-dir-symlink']
  expectedOutput: ['subdir']
